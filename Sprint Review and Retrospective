Each role on our Scrum-agile team played a large part in successfully completing the SNHU Travel project. While no one single member could have completed this project on their own, everyone played an integral part in creating a desirable final product. Whether it was the Product Owner, the Tester, the Developer, or myself as the Scrum Master, each member served their purpose effectively.  

I will start by going into detail regarding the various tasks I took on as Scrum Master. I would say the most apparent and helpful task that I took on a day to day was leading and facilitating the daily standup meetings. My foremost goal regarding our daily standups was to constantly iterate how important an open line of communication between all team members would be. If each member was up front about anything in their way or stopping them from progressing on their tasks, then we would be more likely to be able to come up with a solution as a team. I also made myself extremely available to all members of the team for any sort of guidance or direction that they may have been looking for. I believe that is a very telling quality of any successful Scrum Master.  

Next, I will discuss our Product Owner. Our Product Owner played a key role in successfully completing this project. They were constantly doing everything in their power to raise the overall quality of work from the development team. One way they accomplished this was to always be working to have a properly refined backlog. This allowed our team to always be working on the most pressing and logical tasks throughout each sprint. Another key part of the Product Owner’s role in this project was when they would lead the focus groups with the potential end users of the product. Having an effective leader for these groups allowed us to extract all relevant information pertaining to assuring that we could provide the best user experience possible and meet all possible desires that our customers may have. 

I will now address our developers. As I’ve stated before, every team member plays an important part in the software development process. This is no different when it comes to our developers. Without the work of our developers, we would not have a tangible product for our customers. They are the ones who take all of these different requirements from the product owners, the end users, and the testers and put it all together into a highly desirable and functional package. As a Scrum Master, the single most important idea I have conveyed for each member of our team has been having an open and honest line of communication. It is crucial for our developers to communicate any potential roadblocks they may have, and for our Product Owner and testers to convey any and all possible concerns or requests they may have to our developers. 

	The final member of our team I will discuss is our tester. Without our tester we would have no way to know that all aspects of our product have been tested and proved to be functional without a shadow of a doubt. They are the ones responsible for making sure that any possible way the customer or end user might interact with the product will not result in bugs or failure. Their job requires them to work hand in hand with both the developer and the product owner to ensure that all possible edge cases and specific requests of the customer are met and tested. 

	The handling of each individual user story was made much more manageable through the use of agile methodology and a scrum framework. Focusing a sprint around each of the user stories, or multiple stories per sprint, was a key factor in making sure our team was able to dedicate all the necessary time and resources to each story. As an example, one of our user stories was “As an end user, I want to be able to set a price limit so only trips within my budget will be shown to me.”. Using agile-scrum methodology and input from our tester, we were able to come up with acceptance criteria for this story such as only seeing trips within a given budget range, or having the option to view trips just outside of this given range. The versatility of this approach also helped us out big time when the customer had a change of heart and wanted us to switch focus to detox and retreat style vacations. At that point, the structure of the end product was mostly in place, we just needed to shift the actual destinations to be more physical and mental health oriented. This would have been a much more difficult request, if not impossible, had we been using a waterfall style approach for this project. 

	Open communication played a large role in the success of this product. A relevant example of how this type of communication helped us was the focus groups we held with potential end users of the product. The feedback we received from them allowed us to create more user stories to work towards completing. We were able to effectively communicate these requests to both our tester and developers to give them any specifics regarding the user and customer requests. This type of communication was necessary to ensure that our customer received a desirable end product in a timely manner. 

	An organizational tool that helped our Scrum team out in a large way was Jira. It allowed our team to have a centralized location to convene. The templates that are part of Jira by default were extremely useful for organizing our daily standups and refining our backlog. We were able to make use of the ability to create Gantt charts, assign tasks, and give those tasks story points so we could better design our sprints. Whether it is Jira or another form of project management tool, I believe that this type of software is crucial for any successful software development team to stay organized and efficient. 

	While the use of Scrum-agile approach on this project had some minor drawbacks, I believe the pros of using it far outweighed those cons. Some may see mandatory daily standups as a negative, but in my experience, just holding people accountable to simply state what they got done the previous day and what they plan to do in the current day makes a big difference in productivity. Nobody wants to stand up and say to their coworkers that they only got an hour or two’s worth of work done the previous day. Another drawback for a developer may be that the end product and certain features can be subject to change throughout the agile process. Something that was created in one sprint could potentially lead to another sprint involving a redesign of what was just developed, depending on the feedback of the customer. With that being said, the positives of using a Scrum-agile framework make up for these drawbacks and more. The overall structure of the sprints, an efficiently refined backlog, and a professional Product Owner and Scrum Master all factor in to an extremely efficient and positive workspace. I firmly believe that this type of framework and methodology was the proper choice for this product. If we were to have used something like the waterfall method, it would have been exponentially more difficult to accommodate the customer and potential end user requests of changing the contents of their travel website to focus on retreat and detox style vacations. 
